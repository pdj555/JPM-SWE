spring:
  application:
    name: transaction-platform-processor
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 2147483647
      max-in-flight-requests-per-connection: 5
      enable-idempotence: true
      compression-type: lz4
      batch-size: 32768
      linger-ms: 5
      buffer-memory: 67108864
      delivery-timeout-ms: 300000
      request-timeout-ms: 30000
    consumer:
      group-id: transaction-platform-processor
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      max-poll-records: 500
      fetch-min-bytes: 1024
      fetch-max-wait: 500ms
      session-timeout: 30s

  # Cassandra Configuration  
  cassandra:
    contact-points: localhost
    port: 9042
    local-datacenter: datacenter1
    username: cassandra
    password: cassandra
    schema-action: CREATE_IF_NOT_EXISTS
    request:
      timeout: PT3S
      consistency: LOCAL_QUORUM
    pool:
      heartbeat-interval: PT30S
      idle-timeout: PT120S
      max-requests-per-connection: 32768
    keyspace-name: transaction_platform

  # Web Configuration
  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true

# Server Configuration
server:
  port: 8080
  shutdown: graceful
  tomcat:
    threads:
      max: 400
      min-spare: 20
    accept-count: 200
    max-connections: 16384
    connection-timeout: PT20S
    keep-alive-timeout: PT60S

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: transaction-platform-processor
      version: ${spring.application.version:unknown}

# Logging Configuration
logging:
  level:
    root: INFO
    com.chase.transactionplatform: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    com.datastax.oss.driver: WARN
    org.springframework.web: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Custom Application Properties
transaction-platform:
  kafka:
    topic: transactions.platform
    partitions: 12
    replication-factor: 3
  validation:
    max-amount: 1000000.00
    min-amount: 0.01
    allowed-currencies: USD,EUR,GBP,JPY,CHF,CAD,AUD
  cache:
    ttl: PT10M
    max-size: 10000 